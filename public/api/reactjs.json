{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": null, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Yay, here\u2019s a new weekly Q&amp;amp;A thread!&lt;/p&gt;\n\n&lt;p&gt;The previous one was &lt;a href=\"https://www.reddit.com/r/reactjs/comments/6jm0bj/beginners_thread_easy_questions_week_of_20170626/\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Got questions about React or anything else in its ecosystem? Stuck making progress on your app? Ask away! We\u2019re a friendly bunch. No question is too simple.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Yay, here\u2019s a new weekly Q&amp;A thread!\n\nThe previous one was [here](https://www.reddit.com/r/reactjs/comments/6jm0bj/beginners_thread_easy_questions_week_of_20170626/).\n\nGot questions about React or anything else in its ecosystem? Stuck making progress on your app? Ask away! We\u2019re a friendly bunch. No question is too simple.", "likes": null, "suggested_sort": "new", "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6kzsd1", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "gaearon", "saved": false, "mod_reports": [], "name": "t3_6kzsd1", "score": 10, "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "thumbnail_height": null, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6kzsd1/beginners_thread_easy_questions_week_of_20170703/", "num_reports": null, "locked": false, "stickied": true, "created": 1499116168.0, "url": "https://www.reddit.com/r/reactjs/comments/6kzsd1/beginners_thread_easy_questions_week_of_20170703/", "author_flair_text": null, "quarantine": false, "title": "Beginner's Thread / Easy Questions (week of 2017-07-03)", "created_utc": 1499087368.0, "distinguished": null, "media": null, "num_comments": 12, "is_self": true, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 10}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": 140, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6lhbrf", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "lpuig", "saved": false, "mod_reports": [], "name": "t3_6lhbrf", "score": 15, "approved_by": null, "over_18": false, "domain": "swizec.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/j0MJawO9bh4AHkxBsPJ89tl3N4wbb2RxZGOsTFq-_CA.jpg?s=e96f34b32630b337fd16692025f461e6", "width": 500, "height": 334}, "resolutions": [{"url": "https://i.redditmedia.com/j0MJawO9bh4AHkxBsPJ89tl3N4wbb2RxZGOsTFq-_CA.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=b254c0b48b1db8fe41bfa9e8f6cd1846", "width": 108, "height": 72}, {"url": "https://i.redditmedia.com/j0MJawO9bh4AHkxBsPJ89tl3N4wbb2RxZGOsTFq-_CA.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=13b54f8a3a645151a4eb298c067106a4", "width": 216, "height": 144}, {"url": "https://i.redditmedia.com/j0MJawO9bh4AHkxBsPJ89tl3N4wbb2RxZGOsTFq-_CA.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=5bed7cb11365c341167ef82ada3082bd", "width": 320, "height": 213}], "variants": {}, "id": "bEPxScqRIV7SMNgLpYek9eW16opqTYICcqk15gKRcdk"}], "enabled": false}, "thumbnail": "https://a.thumbs.redditmedia.com/CxBMG9rPFz-t4q9U47P8k5VmyD6Oz7aW3cPgKTKZ-u0.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "thumbnail_height": 93, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6lhbrf/react_components_as_jquery_plugins/", "num_reports": null, "locked": false, "stickied": false, "created": 1499320861.0, "url": "https://swizec.com/blog/using-react-in-the-real-world/swizec/6710", "author_flair_text": null, "quarantine": false, "title": "React components as jQuery plugins", "created_utc": 1499292061.0, "distinguished": null, "media": null, "num_comments": 1, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 15}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": 140, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6lhidn", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "kylebythemile", "saved": false, "mod_reports": [], "name": "t3_6lhidn", "score": 11, "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/eVIJhxnkFARmtLaHaNUqLUTNCAmUAUXTOWUSrZhP3rg.jpg?s=f0cebfff46fd2c20b739ac438aaa2871", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/eVIJhxnkFARmtLaHaNUqLUTNCAmUAUXTOWUSrZhP3rg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=6894804eae06477dd25102b063ef5aa8", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/eVIJhxnkFARmtLaHaNUqLUTNCAmUAUXTOWUSrZhP3rg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=0b1314c8e8a05b88ecdbf56c9ddfc9dd", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/eVIJhxnkFARmtLaHaNUqLUTNCAmUAUXTOWUSrZhP3rg.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=69ec9ad5df78ee79d355dbc50b18bdfc", "width": 320, "height": 320}], "variants": {}, "id": "SL0u2dOs_ZfcirYFQtbJKGP7YB8OOvP0NJJgT4nJeJI"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/yf290WgMCNhju4juYFP9fji51DE44qI3ElJ_rt509Nw.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "thumbnail_height": 140, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6lhidn/how_to_use_react_with_the_gun_realtime_database/", "num_reports": null, "locked": false, "stickied": false, "created": 1499322686.0, "url": "https://github.com/amark/gun/wiki/React-Tutorial", "author_flair_text": null, "quarantine": false, "title": "How To Use React With The Gun Real-Time Database", "created_utc": 1499293886.0, "distinguished": null, "media": null, "num_comments": 0, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 11}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": 140, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6le2m4", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "codedesi", "saved": false, "mod_reports": [], "name": "t3_6le2m4", "score": 17, "approved_by": null, "over_18": false, "domain": "medium.freecodecamp.org", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/eIR3JP92lMg4S6jW5VwlLG6qUKnEaejPf43tpz0ioII.jpg?s=ae5b9e91f7113d6d32e41c4fbe5155a3", "width": 1200, "height": 750}, "resolutions": [{"url": "https://i.redditmedia.com/eIR3JP92lMg4S6jW5VwlLG6qUKnEaejPf43tpz0ioII.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=7fe9699023d1b55433b337770b8a7b03", "width": 108, "height": 67}, {"url": "https://i.redditmedia.com/eIR3JP92lMg4S6jW5VwlLG6qUKnEaejPf43tpz0ioII.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=ad32c47ba256cb1b316f9dc2b56e9c50", "width": 216, "height": 135}, {"url": "https://i.redditmedia.com/eIR3JP92lMg4S6jW5VwlLG6qUKnEaejPf43tpz0ioII.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=e9c312419da8f743c48a0e04b1efc335", "width": 320, "height": 200}, {"url": "https://i.redditmedia.com/eIR3JP92lMg4S6jW5VwlLG6qUKnEaejPf43tpz0ioII.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=d6e6e0c72fce6667eb682d263ce57037", "width": 640, "height": 400}, {"url": "https://i.redditmedia.com/eIR3JP92lMg4S6jW5VwlLG6qUKnEaejPf43tpz0ioII.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=62aae30c8a61fe3165ef9ebbb63bd968", "width": 960, "height": 600}, {"url": "https://i.redditmedia.com/eIR3JP92lMg4S6jW5VwlLG6qUKnEaejPf43tpz0ioII.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=dc6d834c9ff069ba1e28de6231153a14", "width": 1080, "height": 675}], "variants": {}, "id": "Pt5suMWI9ylg3IaVeqmvOBnoW20aIKk5XhXNZff8Fag"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/jQDU7Ds5lDFvSioco4b25CqER6uahYbOtucF9OzaMhs.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "thumbnail_height": 87, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6le2m4/react_pattern_extract_child_components_to_avoid/", "num_reports": null, "locked": false, "stickied": false, "created": 1499290829.0, "url": "https://medium.freecodecamp.org/react-pattern-extract-child-components-to-avoid-binding-e3ad8310725e", "author_flair_text": null, "quarantine": false, "title": "React Pattern: extract child components to avoid binding", "created_utc": 1499262029.0, "distinguished": null, "media": null, "num_comments": 3, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 17}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": 140, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6le49o", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "b_edelstein", "saved": false, "mod_reports": [], "name": "t3_6le49o", "score": 11, "approved_by": null, "over_18": false, "domain": "blog.logrocket.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/Is8oOD6AT_lOb49beZOk6ZF87zUhvu37K12wB_-2LB0.jpg?s=0893e17a9e0e462da519329f96ec4a36", "width": 1200, "height": 401}, "resolutions": [{"url": "https://i.redditmedia.com/Is8oOD6AT_lOb49beZOk6ZF87zUhvu37K12wB_-2LB0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=2ac253b0fc64c1276e76f8edf131a8b9", "width": 108, "height": 36}, {"url": "https://i.redditmedia.com/Is8oOD6AT_lOb49beZOk6ZF87zUhvu37K12wB_-2LB0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=143c786ffd06bf61aca0a88ee869dde3", "width": 216, "height": 72}, {"url": "https://i.redditmedia.com/Is8oOD6AT_lOb49beZOk6ZF87zUhvu37K12wB_-2LB0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=3ce3caf864a2c50ee3868978588d9831", "width": 320, "height": 106}, {"url": "https://i.redditmedia.com/Is8oOD6AT_lOb49beZOk6ZF87zUhvu37K12wB_-2LB0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=34c1a8b4bfa3d42967ab6c410f71f5fd", "width": 640, "height": 213}, {"url": "https://i.redditmedia.com/Is8oOD6AT_lOb49beZOk6ZF87zUhvu37K12wB_-2LB0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=8eeaac467a0881af1405a11d07768c1f", "width": 960, "height": 320}, {"url": "https://i.redditmedia.com/Is8oOD6AT_lOb49beZOk6ZF87zUhvu37K12wB_-2LB0.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=dc102c20307ffca3be07081db7548e4b", "width": 1080, "height": 360}], "variants": {}, "id": "uxYy63Y7aQKD8z6SijDjdXA1M6Baf_prvoHizK9k6CU"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/bAQzf7YItlT7x41TetW4hfaK-lfOBMNLQHIGIJ1RurQ.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "thumbnail_height": 46, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6le49o/creating_canvas_graphics_in_react/", "num_reports": null, "locked": false, "stickied": false, "created": 1499291315.0, "url": "https://blog.logrocket.com/creating-canvas-graphics-in-react-cad70cd5b210", "author_flair_text": null, "quarantine": false, "title": "Creating Canvas Graphics in React", "created_utc": 1499262515.0, "distinguished": null, "media": null, "num_comments": 2, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 11}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": 140, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6le8ha", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "diegohaz", "saved": false, "mod_reports": [], "name": "t3_6le8ha", "score": 10, "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/HdmZxiJS7jkOGZymx62K5tMxbW0d6glVxnaUhjMCrDo.jpg?s=f92e740e695f22c7cd9c5495f6bef3b1", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/HdmZxiJS7jkOGZymx62K5tMxbW0d6glVxnaUhjMCrDo.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=dc60a6a0e0423ea26319a8fa2375c711", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/HdmZxiJS7jkOGZymx62K5tMxbW0d6glVxnaUhjMCrDo.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=6def8cf53ca8203bc7c8ac23ed6035c9", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/HdmZxiJS7jkOGZymx62K5tMxbW0d6glVxnaUhjMCrDo.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=dd17d9f9e42b59ebc5b9d6d0e31b3d21", "width": 320, "height": 320}], "variants": {}, "id": "28AR_jGmNdGwwZpv6tuKPFYZ0VGVlLYaxiDC3UpYeY4"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/nzl7O-sML2qZPRrkruqqgyQO65mObs3JHl8jQZSJdxs.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "thumbnail_height": 140, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6le8ha/an_approach_to_use_reduxsaga_with_server_side/", "num_reports": null, "locked": false, "stickied": false, "created": 1499292498.0, "url": "https://github.com/diegohaz/redux-saga-thunk#motivation", "author_flair_text": null, "quarantine": false, "title": "An approach to use redux-saga with Server Side Rendering and redux-form", "created_utc": 1499263698.0, "distinguished": null, "media": null, "num_comments": 4, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 10}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": null, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So I have 5 weekly lessons to introduce people with some HTML and Javascript to React.  How does this look for a syllabus?&lt;/p&gt;\n\n&lt;p&gt;1\n\u25cb Web Apps 1: Basics: create-react-app, css, and github.io\n\u25cb Application: Create and publish a basic React web app.&lt;/p&gt;\n\n&lt;p&gt;2\n\u25cb Web Apps 2: Extra utilities: React Router, Prettier, React Helmet, and CSS styling\n\u25cb Application: Use React as a templating engine for static HTML.&lt;/p&gt;\n\n&lt;p&gt;3\n\u25cb Web Apps 3: State management in React and introduction to Redux\n\u25cb Application: Create a simple game&lt;/p&gt;\n\n&lt;p&gt;4\n\u25cb Phone Apps 1: create-react-native-app and FlexBox\n\u25cb Application: Create a basic Phone App &lt;/p&gt;\n\n&lt;p&gt;5\n\u25cb Phone Apps 2: Code reuse\n\u25cb Adapt code from August 22nd to the Native format.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "So I have 5 weekly lessons to introduce people with some HTML and Javascript to React.  How does this look for a syllabus?\n\n1\n\u25cb Web Apps 1: Basics: create-react-app, css, and github.io\n\u25cb Application: Create and publish a basic React web app.\n\n2\n\u25cb Web Apps 2: Extra utilities: React Router, Prettier, React Helmet, and CSS styling\n\u25cb Application: Use React as a templating engine for static HTML.\n\n3\n\u25cb Web Apps 3: State management in React and introduction to Redux\n\u25cb Application: Create a simple game\n\n4\n\u25cb Phone Apps 1: create-react-native-app and FlexBox\n\u25cb Application: Create a basic Phone App \n\n5\n\u25cb Phone Apps 2: Code reuse\n\u25cb Adapt code from August 22nd to the Native format.\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6lha1q", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "dhbradshaw", "saved": false, "mod_reports": [], "name": "t3_6lha1q", "score": 1, "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "thumbnail_height": null, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6lha1q/react_short_course_syllabus_what_should_i_change/", "num_reports": null, "locked": false, "stickied": false, "created": 1499320390.0, "url": "https://www.reddit.com/r/reactjs/comments/6lha1q/react_short_course_syllabus_what_should_i_change/", "author_flair_text": null, "quarantine": false, "title": "React Short Course syllabus: what should I change?", "created_utc": 1499291590.0, "distinguished": null, "media": null, "num_comments": 1, "is_self": true, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": null, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, I&amp;#39;m a CS grad, and a Hack Reactor grad. HR, for those who don&amp;#39;t know, is a web development bootcamp. After I finished HR, I searched for a job for a couple of months before I landed a position at a consultant company for Splunk. The pay is decent, but it isn&amp;#39;t really what I want to be doing. I&amp;#39;m now on the search for a new job as a front end developer position, with my top preference being React, as that what I studied most at HR. But having not touched it for 2-3 months at this new job, I&amp;#39;m a bit rusty and it shows. What are some good tools that I can use to help me get back up to scratch for the job search? &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi, I'm a CS grad, and a Hack Reactor grad. HR, for those who don't know, is a web development bootcamp. After I finished HR, I searched for a job for a couple of months before I landed a position at a consultant company for Splunk. The pay is decent, but it isn't really what I want to be doing. I'm now on the search for a new job as a front end developer position, with my top preference being React, as that what I studied most at HR. But having not touched it for 2-3 months at this new job, I'm a bit rusty and it shows. What are some good tools that I can use to help me get back up to scratch for the job search? ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6lfogq", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "zeesmurf", "saved": false, "mod_reports": [], "name": "t3_6lfogq", "score": 2, "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "thumbnail_height": null, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6lfogq/relearning_for_interviews/", "num_reports": null, "locked": false, "stickied": false, "created": 1499305969.0, "url": "https://www.reddit.com/r/reactjs/comments/6lfogq/relearning_for_interviews/", "author_flair_text": null, "quarantine": false, "title": "Relearning for interviews", "created_utc": 1499277169.0, "distinguished": null, "media": null, "num_comments": 4, "is_self": true, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 2}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": 140, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6le4rq", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "iqen93", "saved": false, "mod_reports": [], "name": "t3_6le4rq", "score": 2, "approved_by": null, "over_18": false, "domain": "medium.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/Vr6CuXxxR5S2GtR-Xdc4qQRUhefb1IUO42bqLLFsm9E.jpg?s=1947e5368b2872861ef81e0fca594a8d", "width": 1200, "height": 661}, "resolutions": [{"url": "https://i.redditmedia.com/Vr6CuXxxR5S2GtR-Xdc4qQRUhefb1IUO42bqLLFsm9E.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=2621d80093a1cb15780252ab6470327b", "width": 108, "height": 59}, {"url": "https://i.redditmedia.com/Vr6CuXxxR5S2GtR-Xdc4qQRUhefb1IUO42bqLLFsm9E.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=9c5334417dbdcb3e7a82884397765fdd", "width": 216, "height": 118}, {"url": "https://i.redditmedia.com/Vr6CuXxxR5S2GtR-Xdc4qQRUhefb1IUO42bqLLFsm9E.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=fc87561d85fd4cf666458d43bb11e8f1", "width": 320, "height": 176}, {"url": "https://i.redditmedia.com/Vr6CuXxxR5S2GtR-Xdc4qQRUhefb1IUO42bqLLFsm9E.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=46cd479bd2b747a9e958888770977796", "width": 640, "height": 352}, {"url": "https://i.redditmedia.com/Vr6CuXxxR5S2GtR-Xdc4qQRUhefb1IUO42bqLLFsm9E.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=7b319b8dea9a0b83d9d5dfe96b56b373", "width": 960, "height": 528}, {"url": "https://i.redditmedia.com/Vr6CuXxxR5S2GtR-Xdc4qQRUhefb1IUO42bqLLFsm9E.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=eff5250b0644cdc90f6ea0df1d182fb6", "width": 1080, "height": 594}], "variants": {}, "id": "L5uEeBgSZJF9qbP9R_8Wbpa2nXUCymvZZ1AHLiuQzHk"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/vDl21Vy2y0oKkJq0yC0oO9R-4jl0aXY1HSrcDNTnomA.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "thumbnail_height": 77, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6le4rq/an_opinionated_domaindriven_approach_to/", "num_reports": null, "locked": false, "stickied": false, "created": 1499291467.0, "url": "https://medium.com/@hassan.djirdeh/domain-driven-react-redux-a474ecf7d126", "author_flair_text": null, "quarantine": false, "title": "An opinionated domain-driven approach to structuring your react/redux directories", "created_utc": 1499262667.0, "distinguished": null, "media": null, "num_comments": 0, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 2}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": 140, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6lb6t3", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "abhiaiyer", "saved": false, "mod_reports": [], "name": "t3_6lb6t3", "score": 17, "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/40Csz7PeEZG5nH5Xu7h4LB-XNCqk01xE8pFEyP6Bbws.jpg?s=26f1e5338263fe45b8cc94d27f00dd72", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/40Csz7PeEZG5nH5Xu7h4LB-XNCqk01xE8pFEyP6Bbws.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=a2293dfc8cc5e5f1f77858be75485ae6", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/40Csz7PeEZG5nH5Xu7h4LB-XNCqk01xE8pFEyP6Bbws.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=c4e9b3efd72cae2c6c65a387d5227b12", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/40Csz7PeEZG5nH5Xu7h4LB-XNCqk01xE8pFEyP6Bbws.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=a9f24cab5ed0edfc5e8fe463a2d80a73", "width": 320, "height": 320}], "variants": {}, "id": "9n259HjlT9YeR8LMzJKkwcK2UEp_wq_CEsN99tFh2ao"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/4kGbU52JuxK9UMsHDm2AkZwBqW8xYbBG0wVNu7CxxIc.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "thumbnail_height": 140, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6lb6t3/apollo_storybook_decorator/", "num_reports": null, "locked": false, "stickied": false, "created": 1499248838.0, "url": "https://github.com/abhiaiyer91/apollo-storybook-decorator", "author_flair_text": null, "quarantine": false, "title": "Apollo Storybook Decorator", "created_utc": 1499220038.0, "distinguished": null, "media": null, "num_comments": 0, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 17}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": 140, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6lb9f1", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "papapopper", "saved": false, "mod_reports": [], "name": "t3_6lb9f1", "score": 9, "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/BdQ7rtvX3sfVv7BQXAWBtJZ6I0c3EKdsSU-13SL-4j4.jpg?s=f418c83c662da34105696205aa2a7640", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/BdQ7rtvX3sfVv7BQXAWBtJZ6I0c3EKdsSU-13SL-4j4.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=ef5df68d15d0b92bf29ab573ab54bdb6", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/BdQ7rtvX3sfVv7BQXAWBtJZ6I0c3EKdsSU-13SL-4j4.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=84513dfff3e33a73921325b993868f62", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/BdQ7rtvX3sfVv7BQXAWBtJZ6I0c3EKdsSU-13SL-4j4.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=e2376c60852bb4428d56c1f8fd259022", "width": 320, "height": 320}], "variants": {}, "id": "Tam9sVixqlsM-COJDcPoJbAPK99AFRJipjPjjXl-R4k"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/GELlQITWBRUSIvt5ge4_sBphN7pYznm1Dy8fXWoPRts.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "thumbnail_height": 140, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6lb9f1/async_friendly_transformation_middleware_for_redux/", "num_reports": null, "locked": false, "stickied": false, "created": 1499249802.0, "url": "https://github.com/contrarian/redux-transform", "author_flair_text": null, "quarantine": false, "title": "Async friendly Transformation Middleware for Redux", "created_utc": 1499221002.0, "distinguished": null, "media": null, "num_comments": 0, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 9}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": 140, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6l85y4", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "SirHound", "saved": false, "mod_reports": [], "name": "t3_6l85y4", "score": 25, "approved_by": null, "over_18": false, "domain": "popmotion.io", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/0DfgXJKy2xcYxJtLcvOGf2I22xYP6BHhaEEO7cAu8Ec.jpg?s=c7ae47c812f671842c7258cc69e0de1e", "width": 600, "height": 600}, "resolutions": [{"url": "https://i.redditmedia.com/0DfgXJKy2xcYxJtLcvOGf2I22xYP6BHhaEEO7cAu8Ec.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=4ac98d9580a41988911cc93b52f3fce1", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/0DfgXJKy2xcYxJtLcvOGf2I22xYP6BHhaEEO7cAu8Ec.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=fa1c93b42917e8026e5af200a5826162", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/0DfgXJKy2xcYxJtLcvOGf2I22xYP6BHhaEEO7cAu8Ec.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=7a3bead7a0d52c5a45976e09c1048512", "width": 320, "height": 320}], "variants": {}, "id": "Ss9qSZ6Gqd6D1PQWrQEmsehO5PG5gXdNgH9T-BoA_Hg"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/Zi1uHabvDGvDBrQMutLOt6Alhn4QXKzrgX3hqF8nuNw.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "thumbnail_height": 140, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6l85y4/popmotion_x_react_declarative_animations_physics/", "num_reports": null, "locked": false, "stickied": false, "created": 1499215516.0, "url": "https://popmotion.io/api/react/", "author_flair_text": null, "quarantine": false, "title": "Popmotion x React - Declarative animations, physics and input tracking for components", "created_utc": 1499186716.0, "distinguished": null, "media": null, "num_comments": 4, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 25}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": null, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;We can&amp;#39;t walk the second mile alone.&lt;/p&gt;\n\n&lt;p&gt;So we are turning to reddit with a special request.&lt;/p&gt;\n\n&lt;p&gt;We are looking for an experienced React developer, for a job lined up in August for the right candidate.&lt;/p&gt;\n\n&lt;p&gt;You don&amp;#39;t have to be a React genius, only that you can complete concrete tasks consistently on a daily basis and on time in Jira or YouTrack.&lt;/p&gt;\n\n&lt;p&gt;PM link to your GitHub and availability. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "We can't walk the second mile alone.\n\nSo we are turning to reddit with a special request.\n\nWe are looking for an experienced React developer, for a job lined up in August for the right candidate.\n\nYou don't have to be a React genius, only that you can complete concrete tasks consistently on a daily basis and on time in Jira or YouTrack.\n\nPM link to your GitHub and availability. ", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6lfbjf", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "mutantdustbunny", "saved": false, "mod_reports": [], "name": "t3_6lfbjf", "score": 0, "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "thumbnail_height": null, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6lfbjf/we_need_a_reactjs_developer_for_a_full_time/", "num_reports": null, "locked": false, "stickied": false, "created": 1499302856.0, "url": "https://www.reddit.com/r/reactjs/comments/6lfbjf/we_need_a_reactjs_developer_for_a_full_time/", "author_flair_text": null, "quarantine": false, "title": "We need a React.js developer for a full time position in August. PM me a link to your GitHub to be considered.", "created_utc": 1499274056.0, "distinguished": null, "media": null, "num_comments": 1, "is_self": true, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 0}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": null, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6le2c2", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "carolina_sar", "saved": false, "mod_reports": [], "name": "t3_6le2c2", "score": 0, "approved_by": null, "over_18": false, "domain": "linkedin.com", "hidden": false, "thumbnail": "default", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "thumbnail_height": null, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6le2c2/aurelia_angular2_and_react_top_3_javascript/", "num_reports": null, "locked": false, "stickied": false, "created": 1499290746.0, "url": "https://www.linkedin.com/redir/redirect?url=http%3A%2F%2Ffindnerd%2Ecom%2Flist%2Fview%2FAurelia-Angular2-and-React---Top-3-JavaScript-Frameworks-with-Merits-and-Demerits%2F34190%2F&amp;urlhash=sX6_&amp;_t=tracking_anet", "author_flair_text": null, "quarantine": false, "title": "Aurelia, Angular2 and React - Top 3 JavaScript Frameworks with Merits and Demerits", "created_utc": 1499261946.0, "distinguished": null, "media": null, "num_comments": 4, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 0}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": null, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6lc3jk", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "lobati", "saved": false, "mod_reports": [], "name": "t3_6lc3jk", "score": 1, "approved_by": null, "over_18": false, "domain": "blog.boon.gl", "hidden": false, "thumbnail": "default", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "thumbnail_height": null, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6lc3jk/routes_as_state_in_react/", "num_reports": null, "locked": false, "stickied": false, "created": 1499261417.0, "url": "https://blog.boon.gl/2017/06/29/routes-as-state-in-react.html", "author_flair_text": null, "quarantine": false, "title": "Routes as State in React", "created_utc": 1499232617.0, "distinguished": null, "media": null, "num_comments": 0, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": 140, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6l76op", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "dmitry-budko", "saved": false, "mod_reports": [], "name": "t3_6l76op", "score": 17, "approved_by": null, "over_18": false, "domain": "medium.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/n-F1c1ous2fBJ--V6B_6Rz2TSWvrxHJKg8QbOGY0FGk.jpg?s=762ccff7d644311e7a6ff9212d9bdbf8", "width": 1000, "height": 500}, "resolutions": [{"url": "https://i.redditmedia.com/n-F1c1ous2fBJ--V6B_6Rz2TSWvrxHJKg8QbOGY0FGk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=67639ab1f6d5bcf3f50c09721db46596", "width": 108, "height": 54}, {"url": "https://i.redditmedia.com/n-F1c1ous2fBJ--V6B_6Rz2TSWvrxHJKg8QbOGY0FGk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=995b20bcad499d64f000debd2f741715", "width": 216, "height": 108}, {"url": "https://i.redditmedia.com/n-F1c1ous2fBJ--V6B_6Rz2TSWvrxHJKg8QbOGY0FGk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=4ac667655fcec6a88c43ff59f3e8c0b7", "width": 320, "height": 160}, {"url": "https://i.redditmedia.com/n-F1c1ous2fBJ--V6B_6Rz2TSWvrxHJKg8QbOGY0FGk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=5b2369c6f3cd9007f62ae81e81ef10db", "width": 640, "height": 320}, {"url": "https://i.redditmedia.com/n-F1c1ous2fBJ--V6B_6Rz2TSWvrxHJKg8QbOGY0FGk.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=7296ec5a627f1162371b866f891200fa", "width": 960, "height": 480}], "variants": {}, "id": "HfvwBYXUEf6orLvw743QpbNK5tbSJJIWSkDkb2Bvuu8"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/NrQZDorG7eZvP8pDuKYgeY703pUHpRuv0PRSGwtMnJQ.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "thumbnail_height": 70, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6l76op/how_to_use_normalizrjs_to_organize_data_in_stores/", "num_reports": null, "locked": false, "stickied": false, "created": 1499205235.0, "url": "https://medium.com/@dash_bouquet/using-normalizr-to-organize-data-in-stores-practical-guide-82fa061b60fb", "author_flair_text": null, "quarantine": false, "title": "How to use Normalizr.js to organize data in stores", "created_utc": 1499176435.0, "distinguished": null, "media": null, "num_comments": 3, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 17}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": null, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Very new to react development. I did a tutorial where I created a project that used the webpack config loader: transform-decorators-legacy. This made it possible to use:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;@connect((store) =&amp;gt; {\n  return {\n    stretches: store.stretches.stretches\n  };\n})\nexport default class StretchShower extends React.Component {\n...\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;But now I did another tutorial that used the create-react-app package and I really liked that. Problem is that since there isn&amp;#39;t a webpack.config file to add the loader, I don&amp;#39;t know how to get the connection with my store.&lt;/p&gt;\n\n&lt;p&gt;Any help or directions you can point me in?&lt;/p&gt;\n\n&lt;p&gt;UPDATE:\nPlaced this after the class definition:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;export const ConnectedStretchShower = connect((store) =&amp;gt; ({ stretches: store.stretches.stretches, }))(StretchShower);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;And then I used THAT component instead of the StretchShower like&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;lt;div&amp;gt;\n   &amp;lt;ConnectedStretchShower /&amp;gt;\n&amp;lt;/div&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Which worked!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Very new to react development. I did a tutorial where I created a project that used the webpack config loader: transform-decorators-legacy. This made it possible to use:\n\n    @connect((store) =&gt; {\n      return {\n        stretches: store.stretches.stretches\n      };\n    })\n    export default class StretchShower extends React.Component {\n    ...\n\nBut now I did another tutorial that used the create-react-app package and I really liked that. Problem is that since there isn't a webpack.config file to add the loader, I don't know how to get the connection with my store.\n\nAny help or directions you can point me in?\n\nUPDATE:\nPlaced this after the class definition:\n\n    export const ConnectedStretchShower = connect((store) =&gt; ({ stretches: store.stretches.stretches, }))(StretchShower);\n\nAnd then I used THAT component instead of the StretchShower like\n\n    &lt;div&gt;\n       &lt;ConnectedStretchShower /&gt;\n    &lt;/div&gt;\n\nWhich worked!", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6l9roo", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "Xeppen", "saved": false, "mod_reports": [], "name": "t3_6l9roo", "score": 3, "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": 1499255672.0, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "thumbnail_height": null, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6l9roo/question_help_getting_connect_command_to_work/", "num_reports": null, "locked": false, "stickied": false, "created": 1499231378.0, "url": "https://www.reddit.com/r/reactjs/comments/6l9roo/question_help_getting_connect_command_to_work/", "author_flair_text": null, "quarantine": false, "title": "[Question] Help getting @connect command to work with my create-React-App project", "created_utc": 1499202578.0, "distinguished": null, "media": null, "num_comments": 7, "is_self": true, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 3}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": null, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello, &lt;/p&gt;\n\n&lt;p&gt;I have a victory charts setup. In my parent component I have it hooked up to a websocket that sends it values from 0 to 50. I am trying to make a single bar bar chart that visualizes from 0 to 50. I will have three of these. &lt;/p&gt;\n\n&lt;p&gt;Right now, my data won&amp;#39;t refresh when &lt;code&gt;setState&lt;/code&gt; is called and my charts look like a solid line that doesn&amp;#39;t change. &lt;/p&gt;\n\n&lt;p&gt;How can I fix this? I didn&amp;#39;t see a good example of what I am trying to do in the docs.&lt;/p&gt;\n\n&lt;p&gt;Chart\n    import React from &amp;#39;react&amp;#39;\n    import styles from &amp;#39;../styles.css&amp;#39;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt; import {VictoryBar} from &amp;#39;victory&amp;#39;\n\n\nexport class SingleBar extends React.Component {\n\n    render() {\n        return (\n            &amp;lt;VictoryBar\n                data={[ { x:1, y: this.props.data } ]}\n\n                domain={[1, 50] }\n\n                style={{\n                    data: {fill: this.props.fillColor, strokeWidth: 50},\n                }}\n\n             /&amp;gt;\n        );\n    }\n\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Parent&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;import React from &amp;#39;react&amp;#39;\nimport styles from &amp;#39;../styles.css&amp;#39;\n\nimport { Link } from &amp;#39;react-router&amp;#39;\n\n\nimport { SingleBar } from &amp;#39;./SingleBar&amp;#39;\nimport { EmojiSentiment } from &amp;#39;./emoji&amp;#39;\n\n\nclass Dashboard extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            tweet: &amp;#39;&amp;#39;,\n            overallSentiment: 0,\n            pos: 0,\n            neg: 0,\n            neu: 0,\n            average: 0,\n            getBarPos: this.getBarOne(),\n            getBarNeg: this.getBarTwo(),\n            getBarNeu: this.getBarThree()\n        };\n\n        values = {\n            pos: 0,\n            neg: 0, \n            neu: 0,\n        }\n    };\n\n\n    componentDidMount() {\n        var connection = new WebSocket(&amp;#39;ws://trump-sentiment.herokuapp.com/&amp;#39;);\n\n        connection.onmessage = (e) =&amp;gt; {\n            e = JSON.parse(e.data)\n            console.log(e)\n            if (e.main) {\n                this.setState({\n                    tweet: e.main.featuredTweet,\n                    overallSentiment: e.main.sentiment.score,\n                    pos: e.main.pos,\n                    neg: e.main.neg,\n                    neu: e.main.neu,\n                    average: e.main.average,\n                    getBarPost: this.getDataOne(),\n                    getBarNeg: this.getDataTwo(),\n                    getBarNeu: this.getDataThree()\n                })\n                this.values.pos = e.main.pos;\n                this.values.neg = e.main.neg;\n                this.values.neu = e.main.neu\n            }\n        }\n    }\n\n    getBarOne() {\n        return [ \n            {x: 1, y: this.values.neg }\n        ]  \n    }\n    getBarTwo() {\n        return [ \n            {x: 1, y: this.values.pos }\n        ] \n    }\n    getBarThree() {\n        return [ \n            {x: 1, y: this.values.neu }\n        ] \n    }\n\n\n    render() {\n        const singleFillColor = &amp;#39;#327FC5&amp;#39;;\n\n        return (\n            &amp;lt;div className=&amp;quot;container-fluid&amp;quot;&amp;gt;\n                &amp;lt;div className=&amp;quot;row&amp;quot;&amp;gt;\n                    &amp;lt;div className=&amp;quot;col-md-12 box&amp;quot;&amp;gt;\n                        &amp;lt;div className=&amp;quot;Tweet&amp;quot;&amp;gt;\n                            {this.state.tweet}\n                            &amp;lt;p className=&amp;quot;subtitleTop&amp;quot;&amp;gt;Tweets&amp;lt;/p&amp;gt; \n                        &amp;lt;/div&amp;gt;\n                    &amp;lt;/div&amp;gt;\n                    &amp;lt;div className=&amp;quot;col-md-2 marginR&amp;quot;&amp;gt;\n                        &amp;lt;div className=&amp;quot;marginTopSM box&amp;quot;&amp;gt;\n                            &amp;lt;SingleBar data={this.state.pos} fillColor={&amp;quot;RoyalBlue&amp;quot;} /&amp;gt;  \n                            &amp;lt;p className=&amp;quot;subtitle&amp;quot;&amp;gt;Positive Tweets&amp;lt;/p&amp;gt; \n                        &amp;lt;/div&amp;gt;\n                    &amp;lt;/div&amp;gt;\n                    &amp;lt;div className=&amp;quot;col-md-2 marginR&amp;quot;&amp;gt;\n                        &amp;lt;div className=&amp;quot;marginTopSM box&amp;quot;&amp;gt;\n                            &amp;lt;SingleBar data={ [{ x:1, y: this.state.neg }]  } fillColor={&amp;quot;Tomato&amp;quot;} /&amp;gt;  \n                            &amp;lt;p className=&amp;quot;subtitle&amp;quot;&amp;gt;Negative Tweets&amp;lt;/p&amp;gt; \n                        &amp;lt;/div&amp;gt;\n                    &amp;lt;/div&amp;gt;\n                    &amp;lt;div className=&amp;quot;col-md-2 marginR&amp;quot;&amp;gt;\n                        &amp;lt;div className=&amp;quot;marginTopSM box&amp;quot;&amp;gt;\n                            &amp;lt;SingleBar data={this.state.neu} fillColor={&amp;quot;Orange&amp;quot;} /&amp;gt;  \n                            &amp;lt;p className=&amp;quot;subtitle&amp;quot;&amp;gt;Neutral Tweets&amp;lt;/p&amp;gt; \n                        &amp;lt;/div&amp;gt;\n                    &amp;lt;/div&amp;gt;\n                    &amp;lt;div className=&amp;quot;col-md-2&amp;quot;&amp;gt;\n                        &amp;lt;div className=&amp;quot;marginTopXS flexStacked&amp;quot;&amp;gt;\n                            &amp;lt;div className=&amp;quot;fixedH box marginTop15&amp;quot;&amp;gt;\n                                &amp;lt;span className=&amp;quot;bigNum&amp;quot;&amp;gt;{this.state.average}&amp;lt;/span&amp;gt;\n                                &amp;lt;p className=&amp;quot;subtitleTop&amp;quot;&amp;gt;Score&amp;lt;/p&amp;gt; \n                            &amp;lt;/div&amp;gt;\n                            &amp;lt;div className=&amp;quot;fixedH box&amp;quot;&amp;gt;\n                                &amp;lt;EmojiSentiment className=&amp;quot;bigNum&amp;quot; score={this.state.average} /&amp;gt;\n                                &amp;lt;p className=&amp;quot;subtitleTop&amp;quot;&amp;gt;Overall Sentiment&amp;lt;/p&amp;gt;\n                            &amp;lt;/div&amp;gt;\n                        &amp;lt;/div&amp;gt;\n                    &amp;lt;/div&amp;gt;\n                &amp;lt;/div&amp;gt;\n            &amp;lt;/div&amp;gt;\n        );\n    }\n}\n\n\nexport default Dashboard\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello, \n\nI have a victory charts setup. In my parent component I have it hooked up to a websocket that sends it values from 0 to 50. I am trying to make a single bar bar chart that visualizes from 0 to 50. I will have three of these. \n\nRight now, my data won't refresh when `setState` is called and my charts look like a solid line that doesn't change. \n\nHow can I fix this? I didn't see a good example of what I am trying to do in the docs.\n\nChart\n    import React from 'react'\n    import styles from '../styles.css'\n\n     import {VictoryBar} from 'victory'\n\n\n    export class SingleBar extends React.Component {\n   \n        render() {\n            return (\n                &lt;VictoryBar\n                    data={[ { x:1, y: this.props.data } ]}\n                \n                    domain={[1, 50] }\n\n                    style={{\n                        data: {fill: this.props.fillColor, strokeWidth: 50},\n                    }}\n\n                 /&gt;\n            );\n        }\n\n    }\n\n\nParent\n\n    import React from 'react'\n    import styles from '../styles.css'\n    \n    import { Link } from 'react-router'\n    \n    \n    import { SingleBar } from './SingleBar'\n    import { EmojiSentiment } from './emoji'\n    \n    \n    class Dashboard extends React.Component {\n        constructor() {\n            super();\n            \n            this.state = {\n                tweet: '',\n                overallSentiment: 0,\n                pos: 0,\n                neg: 0,\n                neu: 0,\n                average: 0,\n                getBarPos: this.getBarOne(),\n                getBarNeg: this.getBarTwo(),\n                getBarNeu: this.getBarThree()\n            };\n    \n            values = {\n                pos: 0,\n                neg: 0, \n                neu: 0,\n            }\n        };\n        \n    \n        componentDidMount() {\n            var connection = new WebSocket('ws://trump-sentiment.herokuapp.com/');\n            \n            connection.onmessage = (e) =&gt; {\n                e = JSON.parse(e.data)\n                console.log(e)\n                if (e.main) {\n                    this.setState({\n                        tweet: e.main.featuredTweet,\n                        overallSentiment: e.main.sentiment.score,\n                        pos: e.main.pos,\n                        neg: e.main.neg,\n                        neu: e.main.neu,\n                        average: e.main.average,\n                        getBarPost: this.getDataOne(),\n                        getBarNeg: this.getDataTwo(),\n                        getBarNeu: this.getDataThree()\n                    })\n                    this.values.pos = e.main.pos;\n                    this.values.neg = e.main.neg;\n                    this.values.neu = e.main.neu\n                }\n            }\n        }\n    \n        getBarOne() {\n            return [ \n                {x: 1, y: this.values.neg }\n            ]  \n        }\n        getBarTwo() {\n            return [ \n                {x: 1, y: this.values.pos }\n            ] \n        }\n        getBarThree() {\n            return [ \n                {x: 1, y: this.values.neu }\n            ] \n        }\n    \n    \n        render() {\n            const singleFillColor = '#327FC5';\n    \n            return (\n                &lt;div className=\"container-fluid\"&gt;\n                    &lt;div className=\"row\"&gt;\n                        &lt;div className=\"col-md-12 box\"&gt;\n                            &lt;div className=\"Tweet\"&gt;\n                                {this.state.tweet}\n                                &lt;p className=\"subtitleTop\"&gt;Tweets&lt;/p&gt; \n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div className=\"col-md-2 marginR\"&gt;\n                            &lt;div className=\"marginTopSM box\"&gt;\n                                &lt;SingleBar data={this.state.pos} fillColor={\"RoyalBlue\"} /&gt;  \n                                &lt;p className=\"subtitle\"&gt;Positive Tweets&lt;/p&gt; \n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div className=\"col-md-2 marginR\"&gt;\n                            &lt;div className=\"marginTopSM box\"&gt;\n                                &lt;SingleBar data={ [{ x:1, y: this.state.neg }]  } fillColor={\"Tomato\"} /&gt;  \n                                &lt;p className=\"subtitle\"&gt;Negative Tweets&lt;/p&gt; \n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div className=\"col-md-2 marginR\"&gt;\n                            &lt;div className=\"marginTopSM box\"&gt;\n                                &lt;SingleBar data={this.state.neu} fillColor={\"Orange\"} /&gt;  \n                                &lt;p className=\"subtitle\"&gt;Neutral Tweets&lt;/p&gt; \n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div className=\"col-md-2\"&gt;\n                            &lt;div className=\"marginTopXS flexStacked\"&gt;\n                                &lt;div className=\"fixedH box marginTop15\"&gt;\n                                    &lt;span className=\"bigNum\"&gt;{this.state.average}&lt;/span&gt;\n                                    &lt;p className=\"subtitleTop\"&gt;Score&lt;/p&gt; \n                                &lt;/div&gt;\n                                &lt;div className=\"fixedH box\"&gt;\n                                    &lt;EmojiSentiment className=\"bigNum\" score={this.state.average} /&gt;\n                                    &lt;p className=\"subtitleTop\"&gt;Overall Sentiment&lt;/p&gt;\n                                &lt;/div&gt;\n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            );\n        }\n    }\n    \n    \n    export default Dashboard", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6l90zu", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "quesurfin", "saved": false, "mod_reports": [], "name": "t3_6l90zu", "score": 1, "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": 1499199068.0, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "thumbnail_height": null, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6l90zu/victory_charts_wont_update/", "num_reports": null, "locked": false, "stickied": false, "created": 1499223913.0, "url": "https://www.reddit.com/r/reactjs/comments/6l90zu/victory_charts_wont_update/", "author_flair_text": null, "quarantine": false, "title": "Victory charts won't update?", "created_utc": 1499195113.0, "distinguished": null, "media": null, "num_comments": 2, "is_self": true, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": null, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I have been pondering on the best approaches for a while and figured, hey why not poke reddit with my interrogations!&lt;/p&gt;\n\n&lt;p&gt;Lets say you have a music streaming webapp with those routes:\n/albums/:albumid\n/albums/:albumid/tracks/:trackid&lt;/p&gt;\n\n&lt;p&gt;The state looks like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{\n  albums: {\n    album_0 : {id: &amp;#39;album_0&amp;#39;, name: &amp;#39;DAMN&amp;#39;, tracks: [dt0, dt1, dt2]},\n    album_1:  {id: &amp;#39;album_1&amp;#39;, name: &amp;#39;College Dropout&amp;#39;, tracks: [cdt0, cdt1]}\n  },\n  tracks: {\n    dt0: {id: &amp;#39;dt0&amp;#39;, ...},\n    dt1: {id: &amp;#39;dt1&amp;#39;, ...},\n    dt2: {id: &amp;#39;dt2&amp;#39;, ...},\n    ...\n  }\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Now the main container for the route /albums/:albumid obviously needs the album id to denormalize and select its data from the state\nThe main container for the route /albums/:albumid/tracks/:trackid needs the track id and so on and so on&lt;/p&gt;\n\n&lt;p&gt;My question is: is it better to render my main containers by passing them the albumid or trackid in their props or to set them in the app state?&lt;/p&gt;\n\n&lt;p&gt;My conclusions so far:\nProps:\n  - Better modularity: the component becomes reusable by any other component (ie: i want to display a preview of the album in another page)\n  - Makes it possible to have multiple instances of the component at the same time\nAppState:\n  - Better for using along with reselect since using args in the selectors makes the sharing of selectors useless&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I have been pondering on the best approaches for a while and figured, hey why not poke reddit with my interrogations!\n\nLets say you have a music streaming webapp with those routes:\n/albums/:albumid\n/albums/:albumid/tracks/:trackid\n\nThe state looks like this:\n\n    {\n      albums: {\n        album_0 : {id: 'album_0', name: 'DAMN', tracks: [dt0, dt1, dt2]},\n        album_1:  {id: 'album_1', name: 'College Dropout', tracks: [cdt0, cdt1]}\n      },\n      tracks: {\n        dt0: {id: 'dt0', ...},\n        dt1: {id: 'dt1', ...},\n        dt2: {id: 'dt2', ...},\n        ...\n      }\n    }\n\nNow the main container for the route /albums/:albumid obviously needs the album id to denormalize and select its data from the state\nThe main container for the route /albums/:albumid/tracks/:trackid needs the track id and so on and so on\n\nMy question is: is it better to render my main containers by passing them the albumid or trackid in their props or to set them in the app state?\n\nMy conclusions so far:\nProps:\n  - Better modularity: the component becomes reusable by any other component (ie: i want to display a preview of the album in another page)\n  - Makes it possible to have multiple instances of the component at the same time\nAppState:\n  - Better for using along with reselect since using args in the selectors makes the sharing of selectors useless\n\n\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6l840u", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "undecidability", "saved": false, "mod_reports": [], "name": "t3_6l840u", "score": 3, "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "thumbnail_height": null, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6l840u/redux_props_vs_app_state/", "num_reports": null, "locked": false, "stickied": false, "created": 1499214970.0, "url": "https://www.reddit.com/r/reactjs/comments/6l840u/redux_props_vs_app_state/", "author_flair_text": null, "quarantine": false, "title": "Redux: Props vS App State", "created_utc": 1499186170.0, "distinguished": null, "media": null, "num_comments": 12, "is_self": true, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 3}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": null, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I googled around and found a couple of those todo-app tutorials with 3 models, but I was curious if there was any more complex tutorials available that cover many to many relationships and etc. Any recommendations?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I googled around and found a couple of those todo-app tutorials with 3 models, but I was curious if there was any more complex tutorials available that cover many to many relationships and etc. Any recommendations?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6l5q8u", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "pythonhalp", "saved": false, "mod_reports": [], "name": "t3_6l5q8u", "score": 14, "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "thumbnail_height": null, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6l5q8u/any_recommendations_for_a_tutorial_covering_a/", "num_reports": null, "locked": false, "stickied": false, "created": 1499183473.0, "url": "https://www.reddit.com/r/reactjs/comments/6l5q8u/any_recommendations_for_a_tutorial_covering_a/", "author_flair_text": null, "quarantine": false, "title": "Any recommendations for a tutorial covering a decently complex CRUD app with React?", "created_utc": 1499154673.0, "distinguished": null, "media": null, "num_comments": 9, "is_self": true, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 14}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": 140, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6l17nx", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "jdalbert", "saved": false, "mod_reports": [], "name": "t3_6l17nx", "score": 100, "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/XfBZlSukBC5oSlLZUUFM5ym87wuuZLqXJktvwIl86cY.jpg?s=19e6ad85e3bf5e7999ad8530cbbf4bc1", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/XfBZlSukBC5oSlLZUUFM5ym87wuuZLqXJktvwIl86cY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=9835fe3e4393272a9efdc2048433b351", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/XfBZlSukBC5oSlLZUUFM5ym87wuuZLqXJktvwIl86cY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=3c2b38eda3dfddcf7e21e60ef087a518", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/XfBZlSukBC5oSlLZUUFM5ym87wuuZLqXJktvwIl86cY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=d0445f69c110fe49c81c0f15ff8bcbd2", "width": 320, "height": 320}], "variants": {}, "id": "UN4BGeIxiuBBLsB1iZMGflrbGD5NSb0Wbl8UQrvJAhE"}], "enabled": false}, "thumbnail": "https://a.thumbs.redditmedia.com/x_ThNAuovOhFQjRZ0L-kO6359MZYCxcBzQu7mqyEQj4.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "thumbnail_height": 140, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6l17nx/real_world_react_apps_and_their_open_source/", "num_reports": null, "locked": false, "stickied": false, "created": 1499130818.0, "url": "https://github.com/jeromedalbert/real-world-react", "author_flair_text": null, "quarantine": false, "title": "Real World React apps and their open source codebases for developers to learn from", "created_utc": 1499102018.0, "distinguished": null, "media": null, "num_comments": 11, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 100}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": null, "subreddit": "reactjs", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey,&lt;/p&gt;\n\n&lt;p&gt;so, in work, we&amp;#39;re dealing this problem for a long time. Basically, we have a React application (main), which is really big and then we have another React application (editor), which itself is really complex as well. It resides in a modal window (using React Bootstrap), which allows us to include and use it in our first app.&lt;/p&gt;\n\n&lt;p&gt;When the editor app runs as a standalone package on a blank page, it runs smoothly and everything, but when we use it inside our main app, it&amp;#39;s really sluggish. I have tried profiling it inside our main app and figured out that there are no extra re-renders in our main app or anything.&lt;/p&gt;\n\n&lt;p&gt;It runs smooth on my quad-core desktop PC running Chrome on Windows, but (especially) double-core users with both macOS and Linux are experiencing the performance issues.&lt;/p&gt;\n\n&lt;p&gt;Has anyone ever faced this problem? How did you solve it? Or is it simply not doable?&lt;/p&gt;\n\n&lt;p&gt;The editor app is a Photoshop-like app with drag &amp;amp; drop etc.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hey,\n\nso, in work, we're dealing this problem for a long time. Basically, we have a React application (main), which is really big and then we have another React application (editor), which itself is really complex as well. It resides in a modal window (using React Bootstrap), which allows us to include and use it in our first app.\n\nWhen the editor app runs as a standalone package on a blank page, it runs smoothly and everything, but when we use it inside our main app, it's really sluggish. I have tried profiling it inside our main app and figured out that there are no extra re-renders in our main app or anything.\n\nIt runs smooth on my quad-core desktop PC running Chrome on Windows, but (especially) double-core users with both macOS and Linux are experiencing the performance issues.\n\nHas anyone ever faced this problem? How did you solve it? Or is it simply not doable?\n\nThe editor app is a Photoshop-like app with drag &amp; drop etc.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6l7rh8", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "kudlajz", "saved": false, "mod_reports": [], "name": "t3_6l7rh8", "score": 1, "approved_by": null, "over_18": false, "domain": "self.reactjs", "hidden": false, "thumbnail": "self", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "can_gild": false, "thumbnail_height": null, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6l7rh8/performance_issues_when_using_custom_app_inside/", "num_reports": null, "locked": false, "stickied": false, "created": 1499211482.0, "url": "https://www.reddit.com/r/reactjs/comments/6l7rh8/performance_issues_when_using_custom_app_inside/", "author_flair_text": null, "quarantine": false, "title": "performance issues when using Custom app inside another big appp", "created_utc": 1499182682.0, "distinguished": null, "media": null, "num_comments": 2, "is_self": true, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 1}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": 140, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6l4o2d", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "pyxlmedia", "saved": false, "mod_reports": [], "name": "t3_6l4o2d", "score": 9, "approved_by": null, "over_18": false, "domain": "npmjs.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/sr7XqdeKF73E4m8CFm57jK-VSCmixf5xr3cX1tdw1SY.jpg?s=6101ad50f9972dfc03ec71b42f782ec6", "width": 1200, "height": 630}, "resolutions": [{"url": "https://i.redditmedia.com/sr7XqdeKF73E4m8CFm57jK-VSCmixf5xr3cX1tdw1SY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=5fe4e5bdef475fc7b11f414eeb19d5e8", "width": 108, "height": 56}, {"url": "https://i.redditmedia.com/sr7XqdeKF73E4m8CFm57jK-VSCmixf5xr3cX1tdw1SY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=c38d3be8e46fc96c55c8684c27773fb2", "width": 216, "height": 113}, {"url": "https://i.redditmedia.com/sr7XqdeKF73E4m8CFm57jK-VSCmixf5xr3cX1tdw1SY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=5fac83db7515e4c6e70f1e46849dfeed", "width": 320, "height": 168}, {"url": "https://i.redditmedia.com/sr7XqdeKF73E4m8CFm57jK-VSCmixf5xr3cX1tdw1SY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=640&amp;s=737e6b98dcbe9518b5120fd9fafe69b5", "width": 640, "height": 336}, {"url": "https://i.redditmedia.com/sr7XqdeKF73E4m8CFm57jK-VSCmixf5xr3cX1tdw1SY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=960&amp;s=eb7804a8797cd0789a503c060f1f3bfb", "width": 960, "height": 504}, {"url": "https://i.redditmedia.com/sr7XqdeKF73E4m8CFm57jK-VSCmixf5xr3cX1tdw1SY.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=1080&amp;s=c0b40e94611cffa070a477c5f333d90d", "width": 1080, "height": 567}], "variants": {}, "id": "3CAm7f2euOP7diXidheIHavSdc1loh3U46B-FOssKu4"}], "enabled": false}, "thumbnail": "https://a.thumbs.redditmedia.com/bJcAgP_99xVu3_CJyCo8G2uvnaAuNsC2_LxhVDE87l0.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "thumbnail_height": 73, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6l4o2d/neatcomponents_brings_thoughtbots_neat_grid_to/", "num_reports": null, "locked": false, "stickied": false, "created": 1499168400.0, "url": "https://www.npmjs.com/package/neat-components", "author_flair_text": null, "quarantine": false, "title": "Neat-Components brings Thoughtbot's Neat Grid To Styled-components", "created_utc": 1499139600.0, "distinguished": null, "media": null, "num_comments": 0, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 9}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": 140, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6l5e0k", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "dmjio", "saved": false, "mod_reports": [], "name": "t3_6l5e0k", "score": 4, "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/50Z0Fm47jrBCWlLMZbGYTyMv1co0Vn11dARBOZAcFAU.jpg?s=09e376f0bf15c6afd1518322a9db12d2", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/50Z0Fm47jrBCWlLMZbGYTyMv1co0Vn11dARBOZAcFAU.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=f3e94a466b27e51635a3caf50b0f5140", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/50Z0Fm47jrBCWlLMZbGYTyMv1co0Vn11dARBOZAcFAU.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=4bba28e6a8908e47b0b7ce00b19c8ec2", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/50Z0Fm47jrBCWlLMZbGYTyMv1co0Vn11dARBOZAcFAU.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=f158a6fcdf008b1704700f1f68de9ffe", "width": 320, "height": 320}], "variants": {}, "id": "7ZnFr-B6UONv6XuwRvBebww6q9tc_PExXvl0wP59JxA"}], "enabled": false}, "thumbnail": "https://a.thumbs.redditmedia.com/qdNgXC4O28nWqkMWGlthmeUDEMlQ0arBA6JtkVgGA64.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "thumbnail_height": 140, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6l5e0k/miso_redux_style_framework_in_haskell/", "num_reports": null, "locked": false, "stickied": false, "created": 1499178258.0, "url": "https://github.com/dmjio/miso", "author_flair_text": null, "quarantine": false, "title": "Miso: Redux style framework in Haskell", "created_utc": 1499149458.0, "distinguished": null, "media": null, "num_comments": 0, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 4}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": 140, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6kzr0z", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "cneumann81", "saved": false, "mod_reports": [], "name": "t3_6kzr0z", "score": 47, "approved_by": null, "over_18": false, "domain": "gettechtalent.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/H4eaYyDFLD_OS2MnMuYTbLurlcYMxv85hjwFcvNe33M.jpg?s=74ad13fd1ea182cb57ecfa7fdfa45029", "width": 320, "height": 320}, "resolutions": [{"url": "https://i.redditmedia.com/H4eaYyDFLD_OS2MnMuYTbLurlcYMxv85hjwFcvNe33M.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=10fcdff47a7eb1740a2bf47e2fe2b76c", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/H4eaYyDFLD_OS2MnMuYTbLurlcYMxv85hjwFcvNe33M.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=22540d4f472fad8705b10b8bf55c8fb5", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/H4eaYyDFLD_OS2MnMuYTbLurlcYMxv85hjwFcvNe33M.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=d8ed906c0930f22bf2bcb753f2a7e83b", "width": 320, "height": 320}], "variants": {}, "id": "DU0E32T488xtELUWE8IUzCX2eRDHAx1fMgwF6KP3Vzg"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/KWOE5SWXHQPu6cFLf2e31oByenZ5EasOs_anhcZMyhA.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "thumbnail_height": 140, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6kzr0z/tutorial_realtime_frontend_updates_with_reactjs/", "num_reports": null, "locked": false, "stickied": false, "created": 1499115725.0, "url": "http://gettechtalent.com/blog/tutorial-real-time-frontend-updates-with-react-serverless-and-websockets-on-aws-iot.html", "author_flair_text": null, "quarantine": false, "title": "Tutorial: Real-time front-end updates with ReactJS, Serverless, and WebSockets on AWS IoT", "created_utc": 1499086925.0, "distinguished": null, "media": null, "num_comments": 1, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 47}}, {"kind": "t3", "data": {"contest_mode": false, "subreddit_name_prefixed": "r/reactjs", "banned_by": null, "media_embed": {}, "thumbnail_width": 140, "subreddit": "reactjs", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "6l5i9r", "view_count": null, "secure_media_embed": {}, "clicked": false, "report_reasons": null, "author": "humblespace", "saved": false, "mod_reports": [], "name": "t3_6l5i9r", "score": 1, "approved_by": null, "over_18": false, "domain": "github.com", "hidden": false, "preview": {"images": [{"source": {"url": "https://i.redditmedia.com/LDQ3g8mcQI36EMqitVHZ9fZwxtLC-Dz0PPQ3qlhJBsc.jpg?s=67b53010fe3e81e05ab939f7adf97e55", "width": 400, "height": 400}, "resolutions": [{"url": "https://i.redditmedia.com/LDQ3g8mcQI36EMqitVHZ9fZwxtLC-Dz0PPQ3qlhJBsc.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=108&amp;s=ca65f3732b69ecdc515180bcbf791994", "width": 108, "height": 108}, {"url": "https://i.redditmedia.com/LDQ3g8mcQI36EMqitVHZ9fZwxtLC-Dz0PPQ3qlhJBsc.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=216&amp;s=4f6bebbabd59e6f2b1e51f2dc3d3a6dc", "width": 216, "height": 216}, {"url": "https://i.redditmedia.com/LDQ3g8mcQI36EMqitVHZ9fZwxtLC-Dz0PPQ3qlhJBsc.jpg?fit=crop&amp;crop=faces%2Centropy&amp;arh=2&amp;w=320&amp;s=5170a5e1d7a1eb03fb60d811e0a31c0e", "width": 320, "height": 320}], "variants": {}, "id": "mBc-XAG_ARzu3NqAv1R9fILgbSWs8GG3IWbKG9oqtoI"}], "enabled": false}, "thumbnail": "https://b.thumbs.redditmedia.com/nLuo2k1M2L7OBjFvs9GVWVMdLKOf_nv7j9cZ2QrxPNk.jpg", "subreddit_id": "t5_2zldd", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "gilded": 0, "downs": 0, "brand_safe": true, "archived": false, "removal_reason": null, "post_hint": "link", "can_gild": false, "thumbnail_height": 140, "hide_score": false, "spoiler": false, "permalink": "/r/reactjs/comments/6l5i9r/anyone_have_a_working_example_on_how_to_implement/", "num_reports": null, "locked": false, "stickied": false, "created": 1499180031.0, "url": "https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#generating-dynamic-meta-tags-on-the-server", "author_flair_text": null, "quarantine": false, "title": "Anyone have a working example on how to implement Dynamic Meta for CRA?", "created_utc": 1499151231.0, "distinguished": null, "media": null, "num_comments": 1, "is_self": false, "visited": false, "subreddit_type": "public", "is_video": false, "ups": 1}}], "after": "t3_6l5i9r", "before": null}}